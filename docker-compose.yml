
  # docker compose -f "docker-compose.yml" up -d --build
version: "3.8"
services:
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile.dev
    volumes:
      - type: bind
        source: ./admin
        target: /home/node/app
      - type: volume
        target: /home/node/app/node_modules
    environment:
      - WDS_SOCKET_PORT=4002
      - NODE_ENV=development
    ports: 
      - 4001:3000
    restart: unless-stopped
      
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    environment:
      - WDS_SOCKET_PORT=4002
      - NODE_ENV=development
      - PUBLIC_URL=http://localhost:4000

    volumes:
      - type: bind
        source: ./client
        target: /home/node/app
      - type: volume
        target: /home/node/app/node_modules
    ports: 
      - 4002:3000
    restart: unless-stopped

    
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    environment:
      EMAIL: "khaled.abdulhalim.pro@gmail.com"
      REFRESH_TOKEN: "1//04zg9wISHAtDKCgYIARAAGAQSNwF-L9Ir3QmfUIw5I2tgRybQ9dLBzg5a8bKdq-edyuUzPCpCWytb_ONUs92ewb6-mzf2XUMVpv0"
      CLIENT_ID: "386993347289-54t0r3l2rjflao31kd7dsg50l7lk6obs.apps.googleusercontent.com"
      CLIENT_SECRET: "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"
      access_token: ya29.a0AVA9y1tIv1o3pCtzvRLDCjmKDXpibnQYZ26BEXY-BtiXvvSW2XJblreLBWdmGTQpn-pJPsICkz69Kpn2qIbBz1haBRilXwklmRtb7cCdc6edo2IyZ5-D-32eEo3hFlL-ek9qE79OcCva0i0JTYnNE0vrf9WO
      PORT: 4000
      MONGO_URL: "mongodb://root:password@mongo/app"
      DATABASE_URL: "postgres://root:password@db/app"
      SECRET_KEY: RXCT34ZE5GFDSFD756
      NODE_ENV: development
    volumes:
      - type: bind
        source: ./api/src
        target: /app/src
    ports:
      - 4000:4000
      - 9229:9229 
    depends_on:
      - mongo
      - db
    restart: unless-stopped


  mongo:
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - type: volume
        source: mongo-data
        target: /data/db

  mailhog:
    image: "mailhog/mailhog"
    container_name: "mailhog"
    ports:
      - 8025:8025
      - 1025:1025

  db:
    image: postgres:alpine
    ports:
      - 5434:5432
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    restart: unless-stopped

volumes: 
  mongo-data: {}
  db-data: {}
 


